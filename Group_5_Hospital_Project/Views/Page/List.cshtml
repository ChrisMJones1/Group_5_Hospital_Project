@using Group_5_Hospital_Project.Models
@model IPagedList<Group_5_Hospital_Project.Models.Page>

@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using PagedList.Mvc;
@using PagedList;

<h2>List</h2>

<p>

    @if (User.Identity.Permission() == 3) //Is admin or staff
    {
        @Html.ActionLink("Create New", "New")
    }


    @using (Html.BeginForm("List", "Page", FormMethod.Get))
    {
        @Html.TextBox("search", null, new { @class = "form-control mr-sm-2 d-inline search-field", @placeholder = "Press enter to Search!" })
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(list => Model.First().content_title)
            </th>
            <th>
                @Html.DisplayNameFor(list => Model.First().content_body)
            </th>
            <th>
                @Html.DisplayNameFor(list => Model.First().DateTime)
            </th>
        </tr>
    </thead>

    @if (Model.Count() == 0)
    {
        <tr>
            <td>No Match found.</td>
        </tr>
    }
    else
    {
        foreach (var page in Model)
        {
            <tr>
                <td>
                    <a href="Show/@page.id" style="text-decoration: none; font-weight: bold;">@page.content_title</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => page.content_body)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => page.DateTime)
                </td>
                @if (User.Identity.Permission() == 3 || User.Identity.Permission() == 2) //Is admin or staff
                {
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = page.id }) |
                    @Html.ActionLink("Details", "Show", new { id = page.id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = page.id })
                </td>
                }
            </tr>
        }
    }

</table>

@Html.PagedListPager(Model, i => Url.Action("List", "Page", new { i, search = Request.QueryString["search"] }))
